//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop
  #include "Unit2.h"





//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm2 *Form2;
//---------------------------------------------------------------------------

__fastcall TForm2::TForm2(TComponent* Owner)
	: TForm(Owner)
{
i=0;
fichier = new TIniFile("C:\\Users\\adherbomez\\Desktop\\Station ski\\Lecture.ini");
// definition du fichier ini
carte1 = new Carte(0);
//definition de l'objet carte
SQL = new MySQL();
//definition de l'objet mysql
if(  carte1->connexion()==0)  //connexion à la carte
Label1->Caption= "ok";        //indique si la connexion est ok
else
Label1->Caption= "Nok";       //indique si la connexion n'est pas ok

Chart1-> Visible=False;      //graphique non visible
Timer1->Interval=fichier->ReadInteger("Section int","Cle int",0);   //lit dans le fichier ini
}
//---------------------------------------------------------------------------




void __fastcall TForm2::Button1Click(TObject *Sender)
{
Label3->Visible=True;


}
//---------------------------------------------------------------------------



void __fastcall TForm2::Button3Click(TObject *Sender)
{
Timer1->Enabled=true;
Chart1->Enabled=true;

carre=carte1->getEtat();                    //le carre rouge indique la connexion

if (carre == true)
	{
	   Shape1->Brush->Color=clLime;            // vert si connecté
	}
	else
	{
		Shape1->Brush->Color=clRed;            //rouge si deconnecté
	}

		SQL->Enregistrer();
}
//---------------------------------------------------------------------------

void __fastcall TForm2::Timer1Timer(TObject *Sender)
{

a=carte1->lecture_analog(0);       // lire les valeurs de température de la carte

Series1->AddXY(i,a);         // on donne au graph i++ en asbcisses et a en ordonnées
i++;





}
//---------------------------------------------------------------------------



void __fastcall TForm2::Button5Click(TObject *Sender)
{
Label4->Visible=true;
Chart1->Visible=true;
Button3->Visible=true;
Button4->Visible=true;


}
//---------------------------------------------------------------------------

void __fastcall TForm2::Enregistrer1Click(TObject *Sender)
{


   fichier->WriteInteger("Section int", "Cle int",frequence );

   //On enregistre la température dans le fichier ini
}
//---------------------------------------------------------------------------

void __fastcall TForm2::Button4Click(TObject *Sender)
{
Timer1->Enabled=false;
Chart1->Enabled=false;
carre=carte1->getEtat();
if (carre==true)
	{
	   Shape1->Brush->Color=clLime;
	}
	else
	{
		Shape1->Brush->Color=clRed;
	}
}
//---------------------------------------------------------------------------



void __fastcall TForm2::Button6Click(TObject *Sender)
{

	SQL->connexion("127.0.0.1", "root", "", "stationski");
	Etat=SQL->getEtat();                                       //connexion à la BDD
		if (Etat==true)
		{
		Shape2->Brush->Color=clLime;                          //vert si connecté
		}


}
//---------------------------------------------------------------------------

void __fastcall TForm2::Button7Click(TObject *Sender)
{
	if(SQL->deconnexion())
	{
	Shape2->Brush->Color=clRed;
	}
}
//---------------------------------------------------------------------------






void __fastcall TForm2::Edit1KeyDown(TObject *Sender, WORD &Key, TShiftState Shift)

{
if(Key == VK_RETURN)
{
 int var=Edit1->Text.ToInt();                   //le timer prend la periode indiqué
 Timer1->Interval= var* 1000;                   //var*1000 car on converti en secondes
}
}
//---------------------------------------------------------------------------

